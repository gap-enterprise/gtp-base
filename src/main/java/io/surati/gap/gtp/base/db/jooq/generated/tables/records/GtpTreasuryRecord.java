/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.gtp.base.db.jooq.generated.tables.records;


import io.surati.gap.gtp.base.db.jooq.generated.tables.GtpTreasury;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GtpTreasuryRecord extends UpdatableRecordImpl<GtpTreasuryRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.gtp_treasury.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.gtp_treasury.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.gtp_treasury.representative</code>.
     */
    public void setRepresentative(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.gtp_treasury.representative</code>.
     */
    public String getRepresentative() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.gtp_treasury.representative_position</code>.
     */
    public void setRepresentativePosition(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.gtp_treasury.representative_position</code>.
     */
    public String getRepresentativePosition() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return GtpTreasury.GTP_TREASURY.ID;
    }

    @Override
    public Field<String> field2() {
        return GtpTreasury.GTP_TREASURY.REPRESENTATIVE;
    }

    @Override
    public Field<String> field3() {
        return GtpTreasury.GTP_TREASURY.REPRESENTATIVE_POSITION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRepresentative();
    }

    @Override
    public String component3() {
        return getRepresentativePosition();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRepresentative();
    }

    @Override
    public String value3() {
        return getRepresentativePosition();
    }

    @Override
    public GtpTreasuryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public GtpTreasuryRecord value2(String value) {
        setRepresentative(value);
        return this;
    }

    @Override
    public GtpTreasuryRecord value3(String value) {
        setRepresentativePosition(value);
        return this;
    }

    @Override
    public GtpTreasuryRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GtpTreasuryRecord
     */
    public GtpTreasuryRecord() {
        super(GtpTreasury.GTP_TREASURY);
    }

    /**
     * Create a detached, initialised GtpTreasuryRecord
     */
    public GtpTreasuryRecord(Long id, String representative, String representativePosition) {
        super(GtpTreasury.GTP_TREASURY);

        setId(id);
        setRepresentative(representative);
        setRepresentativePosition(representativePosition);
    }
}
