/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.gtp.base.db.jooq.generated.tables.records;


import io.surati.gap.gtp.base.db.jooq.generated.tables.GtpAnnualWarrant;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GtpAnnualWarrantRecord extends UpdatableRecordImpl<GtpAnnualWarrantRecord> implements Record7<Long, Short, Integer, Double, Double, Double, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.gtp_annual_warrant.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.gtp_annual_warrant.fiscal_year</code>.
     */
    public void setFiscalYear(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.fiscal_year</code>.
     */
    public Short getFiscalYear() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.gtp_annual_warrant.no</code>.
     */
    public void setNo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.no</code>.
     */
    public Integer getNo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.gtp_annual_warrant.annual_amount_to_pay</code>.
     */
    public void setAnnualAmountToPay(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.annual_amount_to_pay</code>.
     */
    public Double getAnnualAmountToPay() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.gtp_annual_warrant.annual_amount_paid</code>.
     */
    public void setAnnualAmountPaid(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.annual_amount_paid</code>.
     */
    public Double getAnnualAmountPaid() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.gtp_annual_warrant.annual_amount_left</code>.
     */
    public void setAnnualAmountLeft(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.annual_amount_left</code>.
     */
    public Double getAnnualAmountLeft() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>public.gtp_annual_warrant.is_split</code>.
     */
    public void setIsSplit(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.gtp_annual_warrant.is_split</code>.
     */
    public Boolean getIsSplit() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Short> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Short, Integer, Double, Double, Double, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Short, Integer, Double, Double, Double, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.ID;
    }

    @Override
    public Field<Short> field2() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.FISCAL_YEAR;
    }

    @Override
    public Field<Integer> field3() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.NO;
    }

    @Override
    public Field<Double> field4() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.ANNUAL_AMOUNT_TO_PAY;
    }

    @Override
    public Field<Double> field5() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.ANNUAL_AMOUNT_PAID;
    }

    @Override
    public Field<Double> field6() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.ANNUAL_AMOUNT_LEFT;
    }

    @Override
    public Field<Boolean> field7() {
        return GtpAnnualWarrant.GTP_ANNUAL_WARRANT.IS_SPLIT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Short component2() {
        return getFiscalYear();
    }

    @Override
    public Integer component3() {
        return getNo();
    }

    @Override
    public Double component4() {
        return getAnnualAmountToPay();
    }

    @Override
    public Double component5() {
        return getAnnualAmountPaid();
    }

    @Override
    public Double component6() {
        return getAnnualAmountLeft();
    }

    @Override
    public Boolean component7() {
        return getIsSplit();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Short value2() {
        return getFiscalYear();
    }

    @Override
    public Integer value3() {
        return getNo();
    }

    @Override
    public Double value4() {
        return getAnnualAmountToPay();
    }

    @Override
    public Double value5() {
        return getAnnualAmountPaid();
    }

    @Override
    public Double value6() {
        return getAnnualAmountLeft();
    }

    @Override
    public Boolean value7() {
        return getIsSplit();
    }

    @Override
    public GtpAnnualWarrantRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord value2(Short value) {
        setFiscalYear(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord value3(Integer value) {
        setNo(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord value4(Double value) {
        setAnnualAmountToPay(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord value5(Double value) {
        setAnnualAmountPaid(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord value6(Double value) {
        setAnnualAmountLeft(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord value7(Boolean value) {
        setIsSplit(value);
        return this;
    }

    @Override
    public GtpAnnualWarrantRecord values(Long value1, Short value2, Integer value3, Double value4, Double value5, Double value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GtpAnnualWarrantRecord
     */
    public GtpAnnualWarrantRecord() {
        super(GtpAnnualWarrant.GTP_ANNUAL_WARRANT);
    }

    /**
     * Create a detached, initialised GtpAnnualWarrantRecord
     */
    public GtpAnnualWarrantRecord(Long id, Short fiscalYear, Integer no, Double annualAmountToPay, Double annualAmountPaid, Double annualAmountLeft, Boolean isSplit) {
        super(GtpAnnualWarrant.GTP_ANNUAL_WARRANT);

        setId(id);
        setFiscalYear(fiscalYear);
        setNo(no);
        setAnnualAmountToPay(annualAmountToPay);
        setAnnualAmountPaid(annualAmountPaid);
        setAnnualAmountLeft(annualAmountLeft);
        setIsSplit(isSplit);
    }
}
