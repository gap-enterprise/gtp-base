/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.gtp.base.db.jooq.generated.tables;


import io.surati.gap.gtp.base.db.jooq.generated.Keys;
import io.surati.gap.gtp.base.db.jooq.generated.Public;
import io.surati.gap.gtp.base.db.jooq.generated.tables.records.GtpWarrantRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GtpWarrant extends TableImpl<GtpWarrantRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.gtp_warrant</code>
     */
    public static final GtpWarrant GTP_WARRANT = new GtpWarrant();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GtpWarrantRecord> getRecordType() {
        return GtpWarrantRecord.class;
    }

    /**
     * The column <code>public.gtp_warrant.id</code>.
     */
    public final TableField<GtpWarrantRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.treasury_id</code>.
     */
    public final TableField<GtpWarrantRecord, Long> TREASURY_ID = createField(DSL.name("treasury_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.gross</code>.
     */
    public final TableField<GtpWarrantRecord, Double> GROSS = createField(DSL.name("gross"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.deduction</code>.
     */
    public final TableField<GtpWarrantRecord, Double> DEDUCTION = createField(DSL.name("deduction"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.debit_account_pec</code>.
     */
    public final TableField<GtpWarrantRecord, String> DEBIT_ACCOUNT_PEC = createField(DSL.name("debit_account_pec"), SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.gtp_warrant.credit_account_pec</code>.
     */
    public final TableField<GtpWarrantRecord, String> CREDIT_ACCOUNT_PEC = createField(DSL.name("credit_account_pec"), SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>public.gtp_warrant.date_pec</code>.
     */
    public final TableField<GtpWarrantRecord, LocalDate> DATE_PEC = createField(DSL.name("date_pec"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>public.gtp_warrant.title</code>.
     */
    public final TableField<GtpWarrantRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.section</code>.
     */
    public final TableField<GtpWarrantRecord, String> SECTION = createField(DSL.name("section"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.chapter</code>.
     */
    public final TableField<GtpWarrantRecord, String> CHAPTER = createField(DSL.name("chapter"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.sub_chapter</code>.
     */
    public final TableField<GtpWarrantRecord, String> SUB_CHAPTER = createField(DSL.name("sub_chapter"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.line</code>.
     */
    public final TableField<GtpWarrantRecord, String> LINE = createField(DSL.name("line"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.bundle</code>.
     */
    public final TableField<GtpWarrantRecord, String> BUNDLE = createField(DSL.name("bundle"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.region</code>.
     */
    public final TableField<GtpWarrantRecord, String> REGION = createField(DSL.name("region"), SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.gtp_warrant.imputation</code>.
     */
    public final TableField<GtpWarrantRecord, String> IMPUTATION = createField(DSL.name("imputation"), SQLDataType.VARCHAR(50).nullable(false), this, "");

    private GtpWarrant(Name alias, Table<GtpWarrantRecord> aliased) {
        this(alias, aliased, null);
    }

    private GtpWarrant(Name alias, Table<GtpWarrantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.gtp_warrant</code> table reference
     */
    public GtpWarrant(String alias) {
        this(DSL.name(alias), GTP_WARRANT);
    }

    /**
     * Create an aliased <code>public.gtp_warrant</code> table reference
     */
    public GtpWarrant(Name alias) {
        this(alias, GTP_WARRANT);
    }

    /**
     * Create a <code>public.gtp_warrant</code> table reference
     */
    public GtpWarrant() {
        this(DSL.name("gtp_warrant"), null);
    }

    public <O extends Record> GtpWarrant(Table<O> child, ForeignKey<O, GtpWarrantRecord> key) {
        super(child, key, GTP_WARRANT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<GtpWarrantRecord> getPrimaryKey() {
        return Keys.GTP_WARRANT_PKEY;
    }

    @Override
    public List<UniqueKey<GtpWarrantRecord>> getKeys() {
        return Arrays.<UniqueKey<GtpWarrantRecord>>asList(Keys.GTP_WARRANT_PKEY);
    }

    @Override
    public List<ForeignKey<GtpWarrantRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GtpWarrantRecord, ?>>asList(Keys.GTP_WARRANT__GTP_WARRANT_TREASURY_ID_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_DEBIT_ACCOUNT_PEC_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_CREDIT_ACCOUNT_PEC_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_TITLE_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_SECTION_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_CHAPTER_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_SUB_CHAPTER_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_SUB_LINE_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_BUNDLE_FKEY, Keys.GTP_WARRANT__GTP_WARRANT_REGION_FKEY);
    }

    private transient GtpTreasury _gtpTreasury;
    private transient GtpAccountPec _gtpWarrantDebitAccountPecFkey;
    private transient GtpAccountPec _gtpWarrantCreditAccountPecFkey;
    private transient GtpTitle _gtpTitle;
    private transient GtpSection _gtpSection;
    private transient GtpChapter _gtpChapter;
    private transient GtpSubChapter _gtpSubChapter;
    private transient GtpLine _gtpLine;
    private transient GtpBundle _gtpBundle;
    private transient GtpRegion _gtpRegion;

    public GtpTreasury gtpTreasury() {
        if (_gtpTreasury == null)
            _gtpTreasury = new GtpTreasury(this, Keys.GTP_WARRANT__GTP_WARRANT_TREASURY_ID_FKEY);

        return _gtpTreasury;
    }

    public GtpAccountPec gtpWarrantDebitAccountPecFkey() {
        if (_gtpWarrantDebitAccountPecFkey == null)
            _gtpWarrantDebitAccountPecFkey = new GtpAccountPec(this, Keys.GTP_WARRANT__GTP_WARRANT_DEBIT_ACCOUNT_PEC_FKEY);

        return _gtpWarrantDebitAccountPecFkey;
    }

    public GtpAccountPec gtpWarrantCreditAccountPecFkey() {
        if (_gtpWarrantCreditAccountPecFkey == null)
            _gtpWarrantCreditAccountPecFkey = new GtpAccountPec(this, Keys.GTP_WARRANT__GTP_WARRANT_CREDIT_ACCOUNT_PEC_FKEY);

        return _gtpWarrantCreditAccountPecFkey;
    }

    public GtpTitle gtpTitle() {
        if (_gtpTitle == null)
            _gtpTitle = new GtpTitle(this, Keys.GTP_WARRANT__GTP_WARRANT_TITLE_FKEY);

        return _gtpTitle;
    }

    public GtpSection gtpSection() {
        if (_gtpSection == null)
            _gtpSection = new GtpSection(this, Keys.GTP_WARRANT__GTP_WARRANT_SECTION_FKEY);

        return _gtpSection;
    }

    public GtpChapter gtpChapter() {
        if (_gtpChapter == null)
            _gtpChapter = new GtpChapter(this, Keys.GTP_WARRANT__GTP_WARRANT_CHAPTER_FKEY);

        return _gtpChapter;
    }

    public GtpSubChapter gtpSubChapter() {
        if (_gtpSubChapter == null)
            _gtpSubChapter = new GtpSubChapter(this, Keys.GTP_WARRANT__GTP_WARRANT_SUB_CHAPTER_FKEY);

        return _gtpSubChapter;
    }

    public GtpLine gtpLine() {
        if (_gtpLine == null)
            _gtpLine = new GtpLine(this, Keys.GTP_WARRANT__GTP_WARRANT_SUB_LINE_FKEY);

        return _gtpLine;
    }

    public GtpBundle gtpBundle() {
        if (_gtpBundle == null)
            _gtpBundle = new GtpBundle(this, Keys.GTP_WARRANT__GTP_WARRANT_BUNDLE_FKEY);

        return _gtpBundle;
    }

    public GtpRegion gtpRegion() {
        if (_gtpRegion == null)
            _gtpRegion = new GtpRegion(this, Keys.GTP_WARRANT__GTP_WARRANT_REGION_FKEY);

        return _gtpRegion;
    }

    @Override
    public GtpWarrant as(String alias) {
        return new GtpWarrant(DSL.name(alias), this);
    }

    @Override
    public GtpWarrant as(Name alias) {
        return new GtpWarrant(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GtpWarrant rename(String name) {
        return new GtpWarrant(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GtpWarrant rename(Name name) {
        return new GtpWarrant(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, Long, Double, Double, String, String, LocalDate, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
